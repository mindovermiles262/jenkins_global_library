@Library('my-jgl') _

pipeline {
  agent any
  stages {
    stage('Valid Feature Branch') {
      steps {
        withEnv(["BRANCH_NAME=feature/xyz"]) {
          script {
            echo "Branch (via ENV): ${env.BRANCH_NAME}"
            dataeng.verifyBranchName()    //=> Branch feature/xyz is valid
          }
        }
      }
    }
    stage('Valid Master Branch') {
      steps {
        withEnv(["BRANCH_NAME=master"]) {
          script {
            echo "Branch (via ENV): ${env.BRANCH_NAME}"
            dataeng.verifyBranchName()    //=> Branch master is valid
          }
        }
      }
    }
    stage('Valid Develop Branch') {
      steps {
        withEnv(["BRANCH_NAME=develop"]) {
          script {
            echo "Branch (via ENV): ${env.BRANCH_NAME}"
            dataeng.verifyBranchName()    //=> Branch develop is valid
          }
        }
      }
    }
    stage('Valid Custom Branch') {
      steps {
        withEnv(["BRANCH_NAME=paulbunyan"]) {
          script {
            echo "Branch (via ENV): ${env.BRANCH_NAME}"
            dataeng.verifyBranchName("paul.*")    //=> Branch paulbunyan is valid
          }
        }
      }
    }
    stage('Invalid Branch Name') {
      steps {
        withEnv(["BRANCH_NAME=mybranch"]) {
          script {
            echo "Branch (via ENV): ${env.BRANCH_NAME}"
            catchError {
              dataeng.verifyBranchName() //=> ERROR: [FAILED] Branch mybranch is INVALID
            }
          }
        }
      }
    }
    stage('Invalid Branch Name with Custom Regex') {
      steps {
        withEnv(["BRANCH_NAME=master"]) {
          script {
            echo "Branch (via ENV): ${env.BRANCH_NAME}"
            catchError {
              dataeng.verifyBranchName("feature.*") //=> ERROR: [FAILED] Branch master is INVALID
            }
          }
        }
      }
    }
    stage('No BRANCH_NAME') {
      steps {
        script {
          dataeng.verifyBranchName()
        }
      }
    }
  }
}
