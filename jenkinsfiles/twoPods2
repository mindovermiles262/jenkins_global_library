/*

====================
==== twoPods v2 ====
====================

Exploring the use of:

* Loading YAML files as kubernetes pod agent templates
* Agent precedence => Is the top-level agent declaration stronger than an
  agent declaration inside of a step?

This example Jenkinsfile shows how agents are inherited while using 
Kubernetes and Jenkins together.  The top-level agent declaration is set
to use an Ubuntu container image. There is a second agent declaration inside
of the third stage which creates an Alpine Linux image.

Suprisingly, the more nested agent call takes precedence over the top-level
agent.

*/

pipeline {
  agent {
    kubernetes {
      yamlFile 'resources/pod-ubuntu.yml'
    }
  }
  stages {
    stage("First No-Container Test") {
      steps {
        sh "cat /etc/*-release"             //=> Alpine
      }
    }
    stage("Alpine Test") {
      agent {
        kubernetes {
         yamlFile 'resources/pod-alpine.yml'
        }
      }
      steps {
        container('my-alpine-container') {
          sh "cat /etc/*-release"           //=> Alpine
        }
      }
    }
    stage("Ubuntu Container Test") {
      steps {
        container('my-ubuntu-container') {
          sh "cat /etc/*-release"           //=> Ubuntu
        }
      }
    }
    stage("Second No-Container Test") {
      steps {
        sh "cat /etc/*-release"             //=> Alpine
      }
    }
  }
}

